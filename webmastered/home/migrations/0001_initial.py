# Generated by Django 4.0.5 on 2022-06-09 13:06

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0069_log_entry_jsonfield'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('content', wagtail.fields.StreamField([('homepage_twocolumnsheadingsubheadingcontent', wagtail.blocks.StructBlock([('heading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the heading section of this block.', null=True, verbose_name='Heading')), ('subheading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the subheading section of this block.', null=True, verbose_name='Subheading')), ('content', wagtail.blocks.RichTextBlock(blank=True, help_text='This text will be displayed in the content section of this block.', null=True, verbose_name='Subheading'))])), ('homepage_twocolumnsheadingsubheadingcontenttwobuttons', wagtail.blocks.StructBlock([('heading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the heading section of this block.', null=True, verbose_name='Heading')), ('subheading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the subheading section of this block.', null=True, verbose_name='Subheading')), ('content', wagtail.blocks.RichTextBlock(blank=True, help_text='This text will be displayed in the content section of this block.', null=True, verbose_name='Subheading')), ('primary_button_content', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the primary button of this block.', null=True, verbose_name='Primary button content')), ('secondary_button_content', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the secondary button of this block.', null=True, verbose_name='Secondary button content'))])), ('homepage_twocolumnsheadingsubheadingaccordion', wagtail.blocks.StructBlock([('heading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the heading section of this block.', null=True, verbose_name='Heading')), ('subheading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the subheading section of this block.', null=True, verbose_name='Subheading')), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be the title of this accordion card.', null=True, verbose_name='Subheading')), ('content', wagtail.blocks.RichTextBlock(blank=True, help_text='This text will be the contents of this accordion block', null=True, verbose_name='Subheading'))])))])), ('homepage_featurespotlight', wagtail.blocks.StructBlock([('heading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the heading section of this block.', null=True, verbose_name='Heading')), ('subheading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be displayed in the subheading section of this block.', null=True, verbose_name='Subheading')), ('content', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='This image will be displayed above the title of this feature card.', required=True, verbose_name='Image')), ('title', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be the title of this feature card.', null=True, verbose_name='Title')), ('content', wagtail.blocks.RichTextBlock(blank=True, help_text='This text will be the contents of this feature block', null=True, verbose_name='Content'))])))])), ('homepage_ctacardleftcontentrightlargeimage', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='This image will be displayed on the right-hand side of this card, the image will take up 3/5 of the card.', required=True, verbose_name='Image')), ('heading', wagtail.blocks.RichTextBlock(blank=True, features=['emphasis', 'italic', 'link', 'document-link', 'code', 'superscript', 'subscript', 'strikethrough'], help_text='This text will be the heading of this Call-to-action (CTA) card.', null=True, verbose_name='Heading')), ('content', wagtail.blocks.RichTextBlock(blank=True, help_text='This text will be the contents of this CTA card.', null=True, verbose_name='Content')), ('button_text', wagtail.blocks.CharBlock(blank=True, help_text='This text will be displayed inside the button in this card.', max_length=50, null=True, verbose_name='Button text')), ('button_page', wagtail.blocks.PageChooserBlock(help_text='Choose a page to be opened when the user clicks the button in this card.', verbose_name='Button link'))]))], blank=True, help_text='Choose blocks to be shown in the body.', null=True, use_json_field=None)),
                ('hero_title', wagtail.fields.RichTextField(blank=True, help_text="This text will be displayed in the 'title' section of the hero.", null=True, verbose_name='Title')),
                ('hero_subtitle', wagtail.fields.RichTextField(blank=True, help_text="This text will be displayed below the title in the 'subtitle' section of the hero.", null=True, verbose_name='Subtitle')),
                ('hero_button_text', models.CharField(blank=True, help_text='This text will be displayed inside the button in the hero section.', max_length=50, null=True, verbose_name='Button text')),
                ('hero_button_page', models.ForeignKey(blank=True, help_text='Choose a page to be opened when the user clicks the button in the hero.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Button link')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
